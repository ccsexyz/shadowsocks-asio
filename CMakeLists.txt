cmake_minimum_required(VERSION 3.5)
project(shadowsocks_asio)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -DASIO_STANDALONE -DBOOST_COROUTINES_NO_DEPRECATION_WARNING")
include_directories("${CMAKE_SOURCE_DIR}/asio/asio/include")
include_directories("${CMAKE_SOURCE_DIR}/json/src")
include_directories("${CMAKE_SOURCE_DIR}/rapidjson/include/rapidjson")

add_subdirectory("gflags")
add_subdirectory("glog")

set(SOURCE_FILES utils.h utils.cpp config.cpp config.h encrypt.cpp encrypt.h)
set(SSSERVER_SOURCE_FILES ssserver.cpp ${SOURCE_FILES} UdpServer.cpp UdpServer.h Server.cpp Server.h)
set(SSLOCAL_SOURCE_FILES sslocal.cpp ${SOURCE_FILES} Local.h Local.cpp)

add_executable(ssserver ${SSSERVER_SOURCE_FILES})
target_link_libraries(ssserver gflags)
target_link_libraries(ssserver glog)
if(UNIX)
    target_link_libraries(ssserver "${CMAKE_SOURCE_DIR}/cryptopp/libcryptopp.a")
    target_link_libraries(ssserver -static-libstdc++)
    target_link_libraries(ssserver pthread)
else()
    target_link_libraries(ssserver "${CMAKE_SOURCE_DIR}/cryptopp/cryptlib.lib")
endif()
add_executable(sslocal ${SSLOCAL_SOURCE_FILES})
target_link_libraries(sslocal gflags)
target_link_libraries(sslocal glog)
if(UNIX)
    target_link_libraries(sslocal "${CMAKE_SOURCE_DIR}/cryptopp/libcryptopp.a")
    target_link_libraries(sslocal -static-libstdc++)
    target_link_libraries(sslocal pthread)
else()
    target_link_libraries(sslocal "${CMAKE_SOURCE_DIR}/cryptopp/cryptlib.lib")
endif()
